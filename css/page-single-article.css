@keyframes splide-loading {
  0% {
    transform: rotate(0);
  }
  to {
    transform: rotate(1turn);
  }
}
.splide__container {
  position: relative;
  box-sizing: border-box;
}

.splide__list {
  margin: 0 !important;
  padding: 0 !important;
  width: -webkit-max-content;
  width: max-content;
  will-change: transform;
}

.splide.is-active .splide__list {
  display: flex;
}

.splide__pagination {
  display: inline-flex;
  align-items: center;
  width: 95%;
  flex-wrap: wrap;
  justify-content: center;
  margin: 0;
}

.splide__pagination li {
  list-style-type: none;
  display: inline-block;
  line-height: 1;
  margin: 0;
}

.splide {
  visibility: hidden;
}

.splide, .splide__slide {
  position: relative;
  outline: none;
}

.splide__slide {
  box-sizing: border-box;
  list-style-type: none !important;
  margin: 0;
  flex-shrink: 0;
}

.splide__slide img {
  vertical-align: bottom;
}

.splide__slider {
  position: relative;
}

.splide__spinner {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  display: inline-block;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: 2px solid #999;
  border-left-color: transparent;
  animation: splide-loading 1s linear infinite;
}

.splide__track {
  position: relative;
  z-index: 0;
  overflow: hidden;
}

.splide--draggable > .splide__track > .splide__list > .splide__slide {
  -webkit-user-select: none;
  user-select: none;
}

.splide--fade > .splide__track > .splide__list {
  display: block;
}

.splide--fade > .splide__track > .splide__list > .splide__slide {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
  opacity: 0;
}

.splide--fade > .splide__track > .splide__list > .splide__slide.is-active {
  position: relative;
  z-index: 1;
  opacity: 1;
}

.splide--rtl {
  direction: rtl;
}

.splide--ttb > .splide__track > .splide__list {
  display: block;
}

.splide--ttb > .splide__pagination {
  width: auto;
}

.splide__arrow {
  position: absolute;
  z-index: 1;
  top: 50%;
  transform: translateY(-50%);
  width: 2em;
  height: 2em;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  padding: 0;
  opacity: 0.7;
  background: #ccc;
}

.splide__arrow svg {
  width: 1.2em;
  height: 1.2em;
}

.splide__arrow:hover {
  cursor: pointer;
  opacity: 0.9;
}

.splide__arrow:focus {
  outline: none;
}

.splide__arrow--prev {
  left: 1em;
}

.splide__arrow--prev svg {
  transform: scaleX(-1);
}

.splide__arrow--next {
  right: 1em;
}

.splide__pagination {
  position: absolute;
  z-index: 1;
  bottom: 0.5em;
  left: 50%;
  transform: translateX(-50%);
  padding: 0;
}

.splide__pagination__page {
  display: inline-block;
  width: 8px;
  height: 8px;
  background: #ccc;
  border-radius: 50%;
  margin: 3px;
  padding: 0;
  transition: transform 0.2s linear;
  border: none;
  opacity: 0.7;
}

.splide__pagination__page.is-active {
  transform: scale(1.4);
  background: #fff;
}

.splide__pagination__page:hover {
  cursor: pointer;
  opacity: 0.9;
}

.splide__pagination__page:focus {
  outline: none;
}

.splide__progress__bar {
  width: 0;
  height: 3px;
  background: #ccc;
}

.splide--nav > .splide__track > .splide__list > .splide__slide {
  border: 3px solid transparent;
}

.splide--nav > .splide__track > .splide__list > .splide__slide.is-active {
  border-color: #000;
}

.splide--nav > .splide__track > .splide__list > .splide__slide:focus {
  outline: none;
}

.splide--rtl > .splide__arrows .splide__arrow--prev, .splide--rtl > .splide__track > .splide__arrows .splide__arrow--prev {
  right: 1em;
  left: auto;
}

.splide--rtl > .splide__arrows .splide__arrow--prev svg, .splide--rtl > .splide__track > .splide__arrows .splide__arrow--prev svg {
  transform: scaleX(1);
}

.splide--rtl > .splide__arrows .splide__arrow--next, .splide--rtl > .splide__track > .splide__arrows .splide__arrow--next {
  left: 1em;
  right: auto;
}

.splide--rtl > .splide__arrows .splide__arrow--next svg, .splide--rtl > .splide__track > .splide__arrows .splide__arrow--next svg {
  transform: scaleX(-1);
}

.splide--ttb > .splide__arrows .splide__arrow, .splide--ttb > .splide__track > .splide__arrows .splide__arrow {
  left: 50%;
  transform: translate(-50%);
}

.splide--ttb > .splide__arrows .splide__arrow--prev, .splide--ttb > .splide__track > .splide__arrows .splide__arrow--prev {
  top: 1em;
}

.splide--ttb > .splide__arrows .splide__arrow--prev svg, .splide--ttb > .splide__track > .splide__arrows .splide__arrow--prev svg {
  transform: rotate(-90deg);
}

.splide--ttb > .splide__arrows .splide__arrow--next, .splide--ttb > .splide__track > .splide__arrows .splide__arrow--next {
  top: auto;
  bottom: 1em;
}

.splide--ttb > .splide__arrows .splide__arrow--next svg, .splide--ttb > .splide__track > .splide__arrows .splide__arrow--next svg {
  transform: rotate(90deg);
}

.splide--ttb > .splide__pagination {
  display: flex;
  flex-direction: column;
  bottom: 50%;
  left: auto;
  right: 0.5em;
  transform: translateY(50%);
}
@charset "UTF-8";
/**
 * color de base
 */
/**/
/**/
/**
 * Typography
 */
/**
 * typography
 */
/**
 * Lists buttons
 */
/* */
/* page-header-bg */
/* Permet de surcharger les variables bootstrap */
/**
 * Chargement progressif
 */
/**
 * Affichage de la langue.
 * Model simple.
 */
/**
 *
 */
/**
 * Card rotation
 */
/**
* translation on hover
*/
/**
* Before cover
*/
/**
* Before cover
*/
/**
 *  pas de retour Ã  la ligne
 */
/**
 *  Mixin for multiline limit text css
 */
/*!
 * .list-element{@include list-element(($paddingY:10px, $paddingX:5px, $borderW:1px));}
 */
/**
 *  Images area to preload,
 *  on ajoute sur la div contenant l'image
 */
/**
 *
 */
/**
 * Affet Ombre
 */
/**
 * Pricelist
 */
.page-header-bg {
  padding: 4rem 0;
  min-height: 200px;
  margin-bottom: 6rem;
}

body,
html {
  font-size: 1.4rem;
  letter-spacing: normal;
  line-height: 1.3;
  color: #4c4c4c;
  margin: 0;
}

html {
  font-size: 62.5%;
  line-height: 1.5;
}

/**
  Elment de base pour le titre.
*/
.h1,
.h2,
.h3,
.h4,
.h5,
.h6,
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: inherit;
  font-weight: 600;
  line-height: inherit;
  margin: 0;
  color: inherit;
}

h1 {
  font-size: 3.4rem;
  margin: 0 0 1.5037593985rem;
  line-height: 4.2rem;
}
@media only screen and (min-width: 992px) {
  h1 {
    font-size: 4.216rem;
  }
}

p {
  font-size: inherit;
  margin: 0 0 1.3333333333rem;
}

.single-blog {
  max-width: 770px;
  margin-left: auto;
  margin-right: auto;
  font-size: 1.806rem;
  line-height: 1.677;
}
@media only screen and (min-width: 992px) {
  .single-blog--body img, .single-blog--images img {
    margin-left: -60px;
    margin-right: -60px;
    max-width: calc(100% + 120px);
  }
}
.single-blog--title {
  text-align: center;
}
.single-blog--images {
  margin-bottom: 4rem;
}
.single-blog--introduction {
  margin-bottom: 4rem;
  font-weight: 400;
}
.single-blog--tags {
  display: flex;
  justify-content: center;
  font-size: 1.186440678rem;
  font-weight: 500;
  color: #7f7f7f;
  margin-bottom: 2rem;
}
.single-blog--tags .item {
  margin-right: 1rem;
  display: inline-flex;
}
.single-blog--tags .item a {
  padding: 0.5rem 1.3333333333rem;
  border: 1px solid #dee2e6;
  color: inherit;
}
.single-blog--icones_info {
  display: flex;
  justify-content: center;
  margin-bottom: 2rem;
  font-size: 1.186440678rem;
}
.single-blog--icones_info .item {
  margin-right: 1rem;
}
.single-blog--body {
  margin-bottom: 5rem;
}
.single-blog--body p + p img {
  margin-top: 2rem;
}
.single-blog--body h2 {
  padding-top: 2rem;
  position: relative;
}
.single-blog--body h2::before {
  content: "";
  display: block;
  border-top: 1px solid #dee2e6;
  margin-bottom: 4rem;
  margin-top: 6.4rem;
}
.single-blog .single-blog--owl .owl-nav .owl-prev {
  left: 0;
  right: auto;
  top: auto;
  bottom: 8rem;
}
.single-blog .single-blog--owl .owl-nav .owl-next {
  left: 5rem;
  right: auto;
  top: auto;
  bottom: 8rem;
}
.single-blog .single-blog--owl .owl-nav {
  position: relative;
  max-width: 500px;
  width: calc(100% - 60px);
  margin-left: auto;
  margin-right: auto;
}
@media only screen and (min-width: 992px) {
  .single-blog .single-blog--owl .owl-nav {
    max-width: 100%;
    width: calc(100% - 100px);
  }
}

h3 {
  font-size: 1.8rem;
  line-height: 2.4rem;
}
@media only screen and (min-width: 992px) {
  h3 {
    font-size: 2.268rem;
  }
}

.teaser-img-desc {
  margin-bottom: 3rem;
  position: relative;
  z-index: 1;
}
@media only screen and (min-width: 992px) {
  .teaser-img-desc.flex-column {
    margin-bottom: 0;
  }
}
.teaser-img-desc__image {
  width: 260px;
  position: relative;
}
.teaser-img-desc__image .categorie {
  position: absolute;
  background: #FFF;
  border-radius: 0.2rem;
  top: 10px;
  right: auto;
  left: 10px;
  padding: 0.8rem 1.4rem;
  font-weight: 600;
  font-size: 1.1965811966rem;
  z-index: 1;
}
.teaser-img-desc__image .img a::before {
  content: "";
  background-color: #333;
  opacity: 0.3;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 0;
}
.teaser-img-desc__desc {
  width: calc(100% - 260px);
  padding-left: 1.3333333333rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
@media only screen and (min-width: 992px) {
  .teaser-img-desc__desc {
    padding-right: 8rem;
  }
}
.teaser-img-desc__desc .description {
  margin-bottom: 1rem;
}
.teaser-img-desc__desc .title {
  font-weight: 500;
  margin-bottom: 1.3333333333rem;
  line-height: 2.4rem;
}
.teaser-img-desc__desc .title a {
  color: inherit;
}
.teaser-img-desc__desc .time_read {
  position: relative;
  font-size: 1.1965811966rem;
  padding-left: 1.7rem;
}
.teaser-img-desc__desc .time_read::before {
  content: "";
  position: absolute;
  width: 1.2rem;
  height: 1.2rem;
  top: auto;
  left: 0;
  bottom: 0;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='11' viewBox='0 0 12 11' fill='none'%3E%3Cpath d='M5.93919 10.3125C8.61094 10.3125 10.7768 8.15787 10.7768 5.5C10.7768 2.84213 8.61094 0.6875 5.93919 0.6875C3.26744 0.6875 1.10156 2.84213 1.10156 5.5C1.10156 8.15787 3.26744 10.3125 5.93919 10.3125Z' stroke='%23A9A9A9' stroke-linecap='round' stroke-linejoin='round'%3E%3C/path%3E%3Cpath d='M5.9375 2.75V5.5L7.31968 6.875' stroke='%23A9A9A9' stroke-linecap='round' stroke-linejoin='round'%3E%3C/path%3E%3C/svg%3E");
  background-repeat: no-repeat;
}
.teaser-img-desc.flex-column .teaser-img-desc__image {
  width: 100%;
}
.teaser-img-desc.flex-column .teaser-img-desc__desc {
  width: 100%;
  padding: 2rem 1.3333333333rem 0;
}

.commentaire {
  padding: 3rem 2rem;
  font-size: 2.52rem;
  position: relative;
  border-top: 2px solid #556370;
  border-bottom: 2px solid #556370;
}
@media only screen and (min-width: 992px) {
  .commentaire {
    padding: 4rem 3rem;
    margin: 4rem 3rem 5rem;
  }
}
.commentaire::before {
  content: "â";
  -webkit-transform: translate(-40px, 10px);
  transform: translate(-40px, 10px);
  color: #3687c6;
  font-weight: 500;
  font-size: 7rem;
  position: absolute;
  line-height: 3rem;
}
.commentaire::after {
  content: "â";
  -webkit-transform: translate(20px, -44px);
  transform: translate(20px, -44px);
  color: #3687c6;
  font-weight: 500;
  font-size: 70px;
  line-height: 3rem;
  float: right;
}

.comparaison_vs {
  margin-bottom: 5rem;
}
@media only screen and (min-width: 992px) {
  .comparaison_vs {
    margin-left: -8rem;
    margin-right: -8rem;
  }
}
.comparaison_vs .content-img {
  margin-bottom: 2.4rem;
}
.comparaison_vs .content-img img {
  margin: 0;
  max-width: 100%;
}
.comparaison_vs .content-text .titre {
  margin-bottom: 2rem;
}

.paragraphList {
  margin-bottom: 4rem;
  text-align: center;
}
.paragraphList ul {
  list-style: none;
  padding: 0;
}
.paragraphList ul li {
  margin-top: 5px;
  display: flex;
  justify-content: start;
  align-items: center;
}
.paragraphList ul li .list_icon {
  width: 25px;
  height: 25px;
  display: flex;
  justify-content: center;
  background-color: ghostwhite;
  align-items: center;
  border-radius: 20px;
  padding: 5px;
  color: teal;
  margin-right: 15px;
}
@media only screen and (max-width: 440px) {
  .paragraphList ul li .list_icon {
    width: 18px;
    height: 18px;
    font-size: 11px;
  }
}
.paragraphList ul li p {
  text-align: left;
  font-weight: 700;
  font-size: 1.54rem;
  line-height: 18px;
  color: #1b1918;
}
.paragraphList ul li p span {
  color: #49a0a2;
}

.serviceBlock-module {
  flex-basis: calc(50% - 15px);
  margin: 0 auto 5rem;
  width: 100%;
}
.serviceBlock-module__container {
  background: linear-gradient(36.64deg, #007891 14.08%, #49a0a2);
  display: flex;
  justify-content: center;
  align-items: center;
}
.serviceBlock-module__serviceMessage {
  background-color: #fff;
  margin: 4rem 5rem 6rem;
  padding: 2rem 2rem 6rem;
  position: relative;
  text-align: center;
  color: #1b1918;
}
@media only screen and (max-width: 991px) {
  .serviceBlock-module__serviceMessage {
    margin: 4rem 3rem 6rem;
  }
}
.serviceBlock-module__serviceTitle {
  line-height: 1.105;
  margin-bottom: 4rem;
}
.serviceBlock-module__serviceDescription {
  font-weight: 400;
}
.serviceBlock-module__button {
  text-decoration: none;
  color: #fff;
  background: #1b1918;
  border-radius: 2px;
  font-style: normal;
  font-weight: 700;
  font-size: 1.54rem;
  line-height: 24px;
  padding: 10px 20px;
  bottom: 0;
  transform: translateY(18%);
  display: inline-block;
}
.serviceBlock-module__button a {
  color: #FFF;
}
.serviceBlock-module__button i {
  font-size: 1.4rem;
  font-weight: 200;
  margin-left: 10px;
}
@media only screen and (max-width: 991px) {
  .serviceBlock-module__button {
    margin-top: 10px;
    position: relative;
  }
}

.owl-carousel .owl-item > div {
  width: 100%;
}
.owl-carousel .owl-item img {
  height: auto;
}
.owl-carousel .owl-nav [class*=owl-] {
  margin: 0;
  background: transparent;
  border-radius: 0;
  transition-property: all;
  transition-duration: 0.3s;
  transition-timing-function: ease-in-out;
}
.owl-carousel .owl-nav [class*=owl-]:hover {
  background-color: #3687c6;
  border-color: #3687c6;
}
.owl-carousel .owl-nav .owl-svg-nav {
  width: 40px;
  height: 40px;
  border: 0.2rem solid #dee2e6;
  padding: 0.5rem;
  fill: #dee2e6;
}
.owl-carousel .owl-nav .owl-prev {
  position: absolute;
  left: auto;
  bottom: auto;
  top: 2rem;
  right: calc(1.5rem + 40px + 1.5rem);
  transform: rotateZ(-90deg);
}
.owl-carousel .owl-nav .owl-next {
  position: absolute;
  left: auto;
  bottom: auto;
  top: 2rem;
  right: 1.5rem;
  transform: rotateZ(90deg);
}
.owl-carousel .owl-dots {
  display: flex !important;
  flex-wrap: wrap;
  justify-content: left;
  align-items: unset;
  margin-left: -0.4rem;
  overflow: hidden;
}
.owl-carousel .owl-dots .owl-dot {
  display: flex;
  margin-bottom: 0.3rem;
  margin-left: 0.4rem;
  border: 1px solid #dee2e6;
  align-items: center;
}
.owl-carousel .owl-dots .owl-dot span {
  background: #dee2e6;
}
.owl-carousel .owl-dots .owl-dot img {
  background: #fff;
  padding: 0.3rem;
}
.owl-carousel .owl-dots .owl-dot.active {
  border-color: #3687c6;
}
.owl-carousel .owl-dots .owl-dot.active span {
  background: #3687c6;
}

h4 {
  font-size: 1.6rem;
  margin: 0 0 0.9090909091rem;
  line-height: 2rem;
}
@media only screen and (min-width: 992px) {
  h4 {
    font-size: 1.984rem;
  }
}

.item-section {
  font-size: 1.4rem;
  max-width: 560px;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  margin-left: auto;
  margin-right: auto;
  padding-top: 20px;
  border-top: 1px solid #dee2e6;
}
@media only screen and (min-width: 992px) {
  .item-section {
    max-width: 700px;
    padding-left: 0;
    padding-right: 0;
  }
}
.item-section .titre-bold,
.item-section .titre-light {
  font-size: 4.9rem;
  font-weight: 300;
  line-height: 1.1;
}
.item-section .titre-bold {
  font-weight: 700;
  margin-bottom: 4rem;
}
.item-section .titre {
  margin-bottom: div(2rem, 2);
}
.item-section .description {
  margin-bottom: 1rem;
}
.item-section .link {
  align-items: center;
  font-weight: 500;
}
.item-section .link svg {
  margin-right: 1rem;
  fill: #3687c6;
}
.item-section .d-flex {
  flex-direction: column;
}
.item-section .d-flex .item {
  width: 100%;
}
@media only screen and (min-width: 992px) {
  .item-section .d-flex {
    flex-direction: row;
  }
  .item-section .d-flex .item {
    width: 58%;
  }
  .item-section .d-flex .item.text {
    width: 38%;
    margin-right: 4%;
  }
}
.item-section .d-flex.link {
  flex-direction: row;
}

.guides-similaires {
  margin-bottom: 5rem;
}

.owl-carousel .item {
  margin: 0;
}

@media only screen and (min-width: 992px) {
  .owl-carousel.owl-drag .owl-item {
    margin-left: 1rem;
  }
}
.custom-splidejs .splide__slide {
  max-width: 500px;
  margin-right: 1.5rem;
}
@media only screen and (min-width: 992px) {
  .custom-splidejs .splide__slide {
    margin-right: 3rem;
    max-width: 680px;
  }
}
.custom-splidejs .splide__slide a {
  color: inherit;
  line-height: 3.5;
}
.custom-splidejs .splide__slide img {
  max-width: 100%;
  margin: 0;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/