@charset "UTF-8";
/**
 * color de base
 */
/**/
/**/
/**
 * Typography
 */
/**
 * typography
 */
/**
 * Lists buttons
 */
/* */
/* page-header-bg */
/* Permet de surcharger les variables bootstrap */
/**
 * Chargement progressif
 */
/**
 * Affichage de la langue.
 * Model simple.
 */
/**
 *
 */
/**
 * Card rotation
 */
/**
* translation on hover
*/
/**
* Before cover
*/
/**
* Before cover
*/
/**
 *  pas de retour Ã  la ligne
 */
/**
 *  Mixin for multiline limit text css
 */
/*!
 * .list-element{@include list-element(($paddingY:10px, $paddingX:5px, $borderW:1px));}
 */
/**
 *  Images area to preload,
 *  on ajoute sur la div contenant l'image
 */
/**
 *
 */
/**
 * Affet Ombre
 */
/**
 * Pricelist
 */
.titre-description .title {
  margin-bottom: 2.4rem;
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
}
.titre-description .title::after {
  content: "";
  margin-top: 1.6rem;
  background-color: #ff6347;
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 80px;
  height: 2px;
}
.titre-description .description {
  font-size: 1.68rem;
  max-width: 900px;
  margin-left: auto;
  margin-right: auto;
}
.titre-description.text-left .title::after, .titre-description.text-justify .title::after {
  margin-left: 0;
}

.custom-text-left {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}
.custom-text-left .title {
  padding-right: 2rem;
  position: relative;
  text-transform: uppercase;
}
.custom-text-left .title::after {
  display: none;
}
.custom-text-left .description {
  max-width: 650px;
  position: relative;
}
.custom-text-left .description::before {
  content: "";
  position: absolute;
  top: 0;
  left: -3rem;
  right: auto;
  bottom: 1rem;
  width: 1px;
  background: #cfcfcf;
}

.teaser-m1 {
  max-width: calc(100% - 3rem);
  border-top: 3px solid #ff6347;
  height: 100%;
}
.teaser-m1 a {
  color: inherit;
}
.teaser-m1 .card-body {
  position: relative;
  padding-top: 2rem;
}
.teaser-m1 .card-body .card-title {
  max-width: calc(100% - 6rem);
}
.teaser-m1 .card-body .icone {
  font-size: 2.8rem;
  position: absolute;
  color: #fff;
  background: #000;
  border-top: 3px solid #ff6347;
  padding: 2rem;
  top: -2.8rem;
  right: 2rem;
  bottom: auto;
  left: auto;
  line-height: 0;
}

.owl-carousel .owl-wrapper {
  display: flex !important;
}
.owl-carousel .owl-item > div {
  height: 100%;
}
.owl-carousel .owl-item > div article {
  height: 100%;
}
.owl-carousel .owl-item > div article > div {
  height: 100%;
}
.owl-carousel .owl-controls .owl-pagination {
  margin-top: 1.5rem;
}
.owl-carousel .owl-controls .owl-page span {
  border-radius: 0;
  width: 20px;
  height: 4px;
}
.owl-carousel .owl-controls .owl-page.active span {
  background: #ff6347;
}

.tabs-m1.tabs .nav-item {
  padding: 0 !important;
}
.tabs-m1.tabs .nav-item .nav-link {
  background-color: #f6f6f6;
  position: relative;
  padding: 1.5rem 2.5rem;
  color: inherit;
  font-weight: 400;
  font-size: 1.68rem;
}
.tabs-m1.tabs .nav-item .nav-link.active {
  background-color: #ff6347;
  color: #fff;
}
.tabs-m1.tabs .nav-item .nav-link::before {
  content: "";
  position: absolute;
  height: 2px;
  top: auto;
  left: 0;
  bottom: 0;
  right: auto;
  width: 0;
  background-color: #ff6347;
  transition: all 0.5s cubic-bezier(0.075, 0.82, 0.165, 1) 0.1s;
}
.tabs-m1.tabs .nav-item .nav-link:hover::before {
  width: 100%;
}
.tabs-m1.tabs .nav.nav-tabs {
  justify-content: center;
  border: 0;
  margin-bottom: 5rem;
}

.block-icon-titre-desc {
  margin-bottom: 4rem;
}
.block-icon-titre-desc .title {
  font-size: 1.68rem;
  letter-spacing: 0.5px;
  font-weight: 400;
}
.block-icon-titre-desc .title a {
  color: inherit;
}
.block-icon-titre-desc--icon {
  display: flex;
  width: 7rem;
  height: 4rem;
  justify-content: center;
  align-items: center;
  font-size: 2.1rem;
  font-weight: 600;
}
.block-icon-titre-desc--icon i {
  color: #ff6347;
}
.block-icon-titre-desc--text p:last-child {
  margin-bottom: 0;
  padding-bottom: 0;
}

.block-section-blog {
  /**
   * .titre-description
   */
  /**
   *  .textcotebg
   */
}
.block-section-blog .titre-description > * {
  max-width: 100%;
}
.block-section-blog .textcotebg {
  padding: 2rem 0;
  margin-bottom: 2rem;
}
.block-section-blog .textcotebg .row {
  margin-right: -30px;
  margin-left: -30px;
}
.block-section-blog .textcotebg .entete {
  padding: 0 15px;
}
.block-section-blog .textcotebg .entete .title a {
  color: inherit;
}

.presentation-company {
  /**
  */
}
.presentation-company .textcotebg {
  padding-bottom: 0;
  padding-top: 4rem;
}
.presentation-company .textcotebg .entete {
  background: transparent;
  padding-top: 0;
  padding-bottom: 0;
}
.presentation-company .textcotebg .entete .title {
  text-transform: unset;
  font-size: 2.1rem;
  font-family: inherit;
}

.thema-gabi-about .textcotebg {
  position: relative;
}
.thema-gabi-about .textcotebg::before {
  content: "";
  position: absolute;
  background-color: rgba(0, 0, 0, 0.3);
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/